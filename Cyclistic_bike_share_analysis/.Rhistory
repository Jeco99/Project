# Load for libraries
library(tidyverse)
library(ggplot2)
library(janitor) # clean the data
library(lubridate)
#avoiding the scientific notation
options(scipen=999)
#read the data
df1 <- read.csv("D:/R/Cyclistic_bike_share_analysis/dataset/202111-divvy-tripdata.csv")
df2 <- read.csv("D:/R/Cyclistic_bike_share_analysis/dataset/202112-divvy-tripdata.csv")
df3 <- read.csv("D:/R/Cyclistic_bike_share_analysis/dataset/202201-divvy-tripdata.csv")
df4 <- read.csv("D:/R/Cyclistic_bike_share_analysis/dataset/202202-divvy-tripdata.csv")
df5 <- read.csv("D:/R/Cyclistic_bike_share_analysis/dataset/202203-divvy-tripdata.csv")
df6 <- read.csv("D:/R/Cyclistic_bike_share_analysis/dataset/202204-divvy-tripdata.csv")
df7 <- read.csv("D:/R/Cyclistic_bike_share_analysis/dataset/202205-divvy-tripdata.csv")
df8 <- read.csv("D:/R/Cyclistic_bike_share_analysis/dataset/202206-divvy-tripdata.csv")
df9 <- read.csv("D:/R/Cyclistic_bike_share_analysis/dataset/202207-divvy-tripdata.csv")
df10 <- read.csv("D:/R/Cyclistic_bike_share_analysis/dataset/202208-divvy-tripdata.csv")
df11 <- read.csv("D:/R/Cyclistic_bike_share_analysis/dataset/202209-divvy-publictripdata.csv")
df12 <- read.csv("D:/R/Cyclistic_bike_share_analysis/dataset/202210-divvy-tripdata.csv")
#Merging all the data
df <- rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11, df12)
#creating a copy
cyclistic <- df
summary(cyclistic)
#removing the NA
cyclistic <- na.omit(cyclistic)
# removing the duplicate rows
cyclistic <- distinct(cyclistic)
#extracting the month, day , year in the started_at column
cyclistic$date <- as.POSIXct(cyclistic$started_at, format = "%Y-%m-%d %H:%M:%S")
cyclistic$year <- format(cyclistic$date, format = "%Y")
cyclistic$month <- format(cyclistic$date, format = "%m")
cyclistic$day <- format(cyclistic$date, format = "%d")
cyclistic$hour <- format(cyclistic$date, format = "%H")
cyclistic$ride_length <- difftime(cyclistic$ended_at, cyclistic$started_at, units = "mins")
cyclistic$weekdays <- strftime(cyclistic$date, "%A") # convert to word days
cyclistic <- cyclistic %>% mutate(month_name = case_when(
month == "11" ~ "November",
month == "12" ~ "December",
month == "01" ~ "January",
month == "02" ~ "February",
month == "03" ~ "March",
month == "04" ~ "April",
month == "05" ~ "May",
month == "06" ~ "June",
month == "07" ~ "July",
month == "08" ~ "August",
month == "09" ~ "September",
month == "10" ~ "October"
))
cyclistic <- cyclistic %>% mutate(season = case_when(
month == "11" ~ "Fall",
month == "12" ~ "Winter",
month == "01" ~ "Winter",
month == "02" ~ "Winter",
month == "03" ~ "Spring",
month == "04" ~ "Spring",
month == "05" ~ "Spring",
month == "06" ~ "Summer",
month == "07" ~ "Summer",
month == "08" ~ "Summer",
month == "09" ~ "Fall",
month == "10" ~ "Fall"
))
cyclistic <- cyclistic %>% mutate(time_day = case_when(
hour == "00" ~ "Night",
hour == "01" ~ "Night",
hour == "02" ~ "Night",
hour == "03" ~ "Night",
hour == "04" ~ "Night",
hour == "05" ~ "Night",
hour == "06" ~ "Morning",
hour == "07" ~ "Morning",
hour == "08" ~ "Morning",
hour == "09" ~ "Morning",
hour == "10" ~ "Morning",
hour == "11" ~ "Morning",
hour == "12" ~ "Afternoon",
hour == "13" ~ "Afternoon",
hour == "14" ~ "Afternoon",
hour == "15" ~ "Afternoon",
hour == "16" ~ "Afternoon",
hour == "17" ~ "Afternoon",
hour == "18" ~ "Evening",
hour == "19" ~ "Evening",
hour == "20" ~ "Evening",
hour == "21" ~ "Evening",
hour == "22" ~ "Evening",
hour == "23" ~ "Evening"
))
#dropping the unnecessary columns
cyclistic <- cyclistic %>% select(-c(ride_id, month, day,
date, hour, started_at,
ended_at, start_station_name,
start_station_id, end_station_name,
end_station_id, start_lat, start_lng,
end_lat, end_lng))
head(cyclistic)
cyclistic_clean <- cyclistic
# calculate the mean of ride_length
cyclistic_avgRide <- mean(cyclistic_clean$ride_length)
cyclistic_avgRide
# calculate the max ride_length
cyclistic_maxRide <- max(cyclistic_clean$ride_length)
cyclistic_maxRide
# calculate the average ride_length for each members and casual riders
cyclistic_avgRide_byMemberCasual <- cyclistic_clean %>%
group_by(member_casual) %>%
summarise_at(vars(ride_length), mean)
cyclistic_avgRide_byMemberCasual
# calculate the average ride_length for users by day_of_week
cyclistic_avgRide_byWeekdays <- cyclistic_clean %>%
group_by(weekdays) %>%
summarise_at(vars(ride_length), mean)
cyclistic_avgRide_byWeekdays
cyclistic_clean %>%
group_by(weekdays) %>%
filter(member_casual == "casual") %>%
summarise_at(vars(ride_length), mean)
cyclistic_clean %>%
group_by(weekdays) %>%
filter(member_casual == "member") %>%
summarise_at(vars(ride_length), mean)
#Count based on the rideable type
rideableType_count <- cyclistic_clean %>% group_by(rideable_type) %>% count()
rideableType_count
#Group the member and casual on the rideable type the calculate the average of ride length
casualCount <- cyclistic_clean %>%
group_by(rideable_type) %>%
filter(member_casual == "casual") %>%
summarise_at(vars(ride_length), mean)
casualCount
memberCount <- cyclistic_clean %>%
group_by(rideable_type) %>%
filter(member_casual == "member") %>%
summarise_at(vars(ride_length), mean)
memberCount
#What is the average ride length during each of season?
avgRideLength_season <- cyclistic_clean %>% group_by(season) %>% summarise_at(vars(ride_length), mean)
avgRideLength_season
cyclistic_clean %>%
group_by(season) %>%
filter(member_casual == "casual") %>%
summarise_at(vars(ride_length), mean)
cyclistic_clean %>%
group_by(season) %>%
filter(member_casual == "member") %>%
summarise_at(vars(ride_length), mean)
#What is the average ride length during each of time_day?
avgRideLength_timeDay <- cyclistic_clean %>% group_by(time_day) %>% summarise_at(vars(ride_length), mean)
avgRideLength_timeDay
cyclistic_clean %>%
group_by(time_day) %>%
filter(member_casual == "casual") %>%
summarise_at(vars(ride_length), mean)
cyclistic_clean %>%
group_by(time_day) %>%
filter(member_casual == "member") %>%
summarise_at(vars(ride_length), mean)
#What is the average ride length during each of month?
month_cyclistic <- cyclistic_clean %>%
group_by(month_name) %>%
summarise_at(vars(ride_length), mean)
month_fact <- month_cyclistic %>%
mutate(
Month = factor(month_name, levels = month.name)
) %>%
arrange(Month)
month_fact <- month_fact %>% select(-c(Month))
# Load for libraries
library(tidyverse)
# calculate the mean of ride_length
cyclistic_avgRide <- mean(cyclistic_clean$ride_length)
cyclistic_avgRide
# calculate the average ride_length for users by day_of_week
cyclistic_avgRide_byWeekdays <- cyclistic_clean %>%
group_by(weekdays) %>%
summarise_at(vars(ride_length), mean)
cyclistic_avgRide_byWeekdays
# calculate the average ride_length for users by day_of_week
week.name <- c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday", "Saturday", "Sunday")
week_count <- cyclistic_clean %>% group_by(weekdays) %>% count()
week_func(week_count, week_count$weekdays)
week_RideLength <- cyclistic_clean %>% group_by(weekdays) %>% count()
week_RideLength
week_RideLength <- cyclistic_clean %>%
group_by(weekdays) %>%
summarise_at(vars(ride_length), mean)
week_RideLength
week_avg_RideLength <- week_RideLength %>%
mutate(
Weekday = factor(weekdays, levels = week.name),
avgMean = mean(week_RideLength$ride_length)
) %>%
arrange(Weekday)
week_avg_RideLength
week_avg_RideLength <- week_RideLength %>%
mutate(
Weekday = factor(weekdays, levels = week.name),
) %>%
arrange(Weekday)
week_avg_RideLength
weekCount_total <- week_avg_RideLength %>% select(-c(Weekday))
week_avg <- week_avg_RideLength %>% select(-c(Weekday))
week_avg
mean(week_avg$ride_length)
cyclistic_avgRide_byWeekdays <- cyclistic_clean %>%
group_by(weekdays) %>%
summarise_at(vars(ride_length), mean)
cyclistic_avgRide_byWeekdays
casualWeekday <- cyclistic_clean %>%
group_by(weekdays) %>%
filter(member_casual == "casual") %>%
mutate(
avg = summarise_at(vars(ride_length), mean),
n = count()
)
casualWeekday <- cyclistic_clean %>%
group_by(weekdays) %>%
filter(member_casual == "casual") %>%
mutate(
avg = summarise_at(vars(ride_length), mean),
)
casualWeekday <- cyclistic_clean %>%
group_by(weekdays) %>%
filter(member_casual == "casual") %>%
mutate(
summarise_at(vars(ride_length), mean),
)
casualWeekday <- cyclistic_clean %>%
group_by(weekdays) %>%
filter(member_casual == "casual") %>%
summarise_at(vars(ride_length), mean)
casualWeekday
casualWeekday <- cyclistic_clean %>%
group_by(weekdays) %>%
filter(member_casual == "casual") %>%
count() %>%
summarise_at(vars(ride_length), mean)
casualWeekday <- cyclistic_clean %>%
group_by(weekdays) %>%
filter(member_casual == "casual") %>%
summarise_at(vars(ride_length), mean)
casualWeekday
casualWeekday
memberWeekday <- cyclistic_clean %>%
group_by(weekdays) %>%
filter(member_casual == "member") %>%
summarise_at(vars(ride_length), mean)
memberWeekday
memberCount
week_avg
cyclistic_avgRide_byMemberCasual
weekdayAvg <- data.frame(casualWeekday, memberWeekday)
weekdayAvg
weekdayAvg <- weekdayAvg %>% rename(
"Weekdays" = weekdays,
"casual_avg_rideLength" = ride_length,
"member_avg_rideLength" = ride_length.1
)
weekdayAvg
weekdayAvg <- data.frame(casualWeekday, memberWeekday$ride_length)
weekdayAvg <- weekdayAvg %>% rename(
"Weekdays" = weekdays,
"casual_avg_rideLength" = ride_length,
"member_avg_rideLength" = ride_length.1
)
weekdayAvg
casualWeekday <- cyclistic_clean %>%
group_by(weekdays) %>%
filter(member_casual == "casual") %>%
summarise_at(vars(ride_length), mean)
casualWeekday
memberWeekday <- cyclistic_clean %>%
group_by(weekdays) %>%
filter(member_casual == "member") %>%
summarise_at(vars(ride_length), mean)
memberWeekday
weekdayAvg <- data.frame(casualWeekday, memberWeekday$ride_length)
weekdayAvg <- weekdayAvg %>% rename(
"Weekdays" = weekdays,
"casual_avg_rideLength" = ride_length,
"member_avg_rideLength" = ride_length.1
)
weekdayAvg
weekdayAvg <- data.frame(casualWeekday, memberWeekday$ride_length)
weekdayAvg
weekdayAvg <- weekdayAvg %>% rename(
"Weekdays" = weekdays,
"casual_avg_rideLength" = ride_length,
"member_avg_rideLength" = memberWeekday.ride_length
)
weekdayAvg
rideableType_count <- cyclistic_clean %>% group_by(rideable_type) %>% count()
rideableType_count
rideableTypeAvg <- data.frame(casualCount, memberCount$ride_length)
casualCount
memberCount
rideableTypeAvg <- merge(casualCount, memberCount$ride_length, all = TRUE)
rideableTypeAvg <- rideableTypeAvg %>% rename(
"Weekdays" = weekdays,
"casual_avg_rideLength" = ride_length,
"member_avg_rideLength" = memberWeekday.ride_length
)
rideableTypeAvg
# Finding maximum length
max_ln <- max(c(length(casualCount), length(memberCount)))
rideableTypeAvg <- data.frame(casual = c(casualCount,rep(NA, max_ln - length(casualCount))),
member = c(memberCount,rep(NA, max_ln - length(memberCount))))
rideableTypeAvg
# Finding maximum length
max_ln <- max(c(length(casualCount), length(memberCount))
)
max_ln
max(3,2)
length(memberCount)
# Finding maximum length
max_ln <- max(c((length(casualCount), length(memberCount)))
# Finding maximum length
max_ln <- max(length(casualCount), length(memberCount))
max_ln
length(casualCount)
length(memberCount)
#Group the member and casual on the rideable type the calculate the average of ride length
casualCount <- cyclistic_clean %>%
group_by(rideable_type) %>%
filter(member_casual == "casual") %>%
summarise_at(vars(ride_length), mean)
casualCount
memberCount <- cyclistic_clean %>%
group_by(rideable_type) %>%
filter(member_casual == "member") %>%
summarise_at(vars(ride_length), mean)
memberCount
# Finding maximum length
max_ln <- max(length(casualCount), length(memberCount))
max_ln
length(casualCount)
length(memberCount)
# Finding maximum length
max_ln <- max(nrow(casualCount), nrow(memberCount))
max_ln
rideableTypeAvg <- data.frame(casual = c(casualCount,rep(NA, max_ln - length(casualCount))),
member = c(memberCount,rep(NA, max_ln - length(memberCount))))
rideableTypeAvg
# Finding maximum length
max_ln <- max(nrow(casualCount), nrow(memberCount))
rideableTypeAvg <- data.frame(casual = c(casualCount,rep(NA, max_ln - nrow(casualCount))),
member = c(memberCount,rep(NA, max_ln - nrow(memberCount))))
rideableTypeAvg
is.data.frame((rideableTypeAvg))
rideableTypeAvg <- data.frame(casual = c(casualCount,rep(NA, max_ln - nrow(casualCount))),
member = c(memberCount,rep(NA, max_ln - nrow(memberCount))))
source("D:/R/Cyclistic_bike_share_analysis/Cyclistic_bike_share_analysis_code_chunk.R")
